	Lexeme		Token	row_no in symbol_table

	Program		PROGRAM	-
	p1Main		ID	0
	;		;	-
	Int		INT	-
	i1		ID	1
	,		,	-
	i2		ID	2
	:=		:=	-
	#-23		Int	3
	,		,	-
	i3		ID	3
	:=		:=	-
	#0		Int	4
	-		-	-
	(		(	-
	#3		Int	4
	/		/	-
	(		(	-
	#2		Int	4
	-		-	-
	#1		Int	4
	)		)	-
	)		)	-
	;		;	-
	Real		REAL	-
	r1var		ID	4
	:=		:=	-
	#23.003		Real	5
	+		+	-
	i1		ID	1
	,		,	-
	r2var		ID	5
	;		;	-
	Bool		BOOL	-
	b1		ID	6
	;		;	-
	Bool		BOOL	-
	b2		ID	7
	:=		:=	-
	(		(	-
	False		FALSE	-
	And Then		AND THEN	-
	True		TRUE	-
	)		)	-
	.GT.		.GT.	-
	(		(	-
	#1		Int	8
	+		+	-
	#3		Int	8
	)		)	-
	;		;	-
	Procedure		PROCEDURE	-
	p1		ID	8
	(		(	-
	Int		INT	-
	t1		ID	9
	,		,	-
	Bool		BOOL	-
	t2		ID	10
	)		)	-
	Real		REAL	-
	t3		ID	11
	;		;	-
	Function		FUNCTION	-
	f1		ID	12
	(		(	-
	)		)	-
	:		:	-
	Int		INT	-
	Begin		BEGIN	-
	For		FOR	-
	i1		ID	1
	:=		:=	-
	i2		ID	2
	To		TO	-
	#100		Int	13
	Do		DO	-
	Begin		BEGIN	-
	For		FOR	-
	i2		ID	2
	:=		:=	-
	i3		ID	3
	Downto		DOWNTO	-
	#-100		Int	13
	Do		DO	-
	Begin		BEGIN	-
	#2		Int	13
	End		END	-
	End		END	-
	;		;	-
	Return		RETURN	-
	i2		ID	2
	End		END	-
	;		;	-
	Begin		BEGIN	-
	f1		ID	12
	(		(	-
	)		)	-
	End		END	-
	;		;	-
	Begin		BEGIN	-
	p1		ID	8
	(		(	-
	#100		Int	13
	,		,	-
	#200		Int	13
	)		)	-
	;		;	-
	False		FALSE	-
	;		;	-
	If		If	-
	#32		Int	13
	Then		Then	-
	If		If	-
	i1		ID	1
	.GE.		.GE.	-
	i2		ID	2
	Then		Then	-
	Begin		BEGIN	-
	i1		ID	1
	:=		:=	-
	i1		ID	1
	/		/	-
	i2		ID	2
	;		;	-
	i2		ID	2
	:=		:=	-
	i3		ID	3
	End		END	-
	Else		Else	-
	i1		ID	1
	:=		:=	-
	i3		ID	3
	;		;	-
	While		WHILE	-
	f1		ID	12
	(		(	-
	)		)	-
	.NE.		.NE.	-
	#5		Int	13
	Do		DO	-
	Begin		BEGIN	-
	b2		ID	7
	End		END	-
	;		;	-
	Case		CASE	-
	i1		ID	1
	#1		Int	13
	:		:	-
	Begin		BEGIN	-
	True		TRUE	-
	End		END	-
	;		;	-
	#2		Int	13
	:		:	-
	False		FALSE	-
	;		;	-
	End		END	-
	End		END	-
	;		;	-
